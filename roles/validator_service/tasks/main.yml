#SPDX-License-Identifier: MIT ---
# tasks file for fogo_validator
- name: Install the acl package that is needed by Ansible
  become: true
  apt:
    name:
      - acl
    update_cache: yes

- name: Create a service user
  become: true
  user:
    name: "{{ service_user }}"
    shell: "/bin/bash"
    create_home: true
    password: "!"
    state: present

- name: Bootstrap disks (which should be run only once)
  include_tasks: bootstrap_disks.yml
  when: bootstrap_disks

- name: Performance tuning
  include_tasks: performance_tuning.yml

- name: Update UFW settings for Firedancer
  include_tasks: ufw_settings.yml

- name: Update repositories cache and install required libraries
  become: true
  apt:
    name:
      - build-essential
      - clang
      - git
      - make
      - pkgconf
      - cmake
      - libssl-dev
      - libclang-dev
      - libudev-dev
      - protobuf-compiler
    update_cache: yes

- name: Check agave-validator availability (used for gracefully restarting the service)
  shell: 'bash -lc "command -v agave-validator"'
  become: true
  become_user: "{{ service_user }}"
  register: agave_validator_check
  changed_when: false
  failed_when: false
  tags:
    - always

- name: Build fogo firedancer client
  include_tasks: build_fogo_fd_client.yml
  vars:
    temp_source_code_folder: "/home/{{ service_user }}/fogo-{{ validator_client_version }}"
  tags:
    - update_binary

- name: Generate firedancer config from the template
  template:
    src: "{{ firedancer_config_template_path }}"
    dest: "{{ firedancer_config_path }}"
    mode: "0644"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
  notify:
    - Restart fogo validator service
  tags:
    - update_config

- name: Check the existence of the key files
  block:
    - name: Check if the identity keypair exists
      stat:
        path: "{{ identity_path }}"
      register: identity_keypair_stat

    - name: "{{ identity_path }} does not exist, create a new one for now"
      become: true
      become_user: "{{ service_user }}"
      shell: "fdctl --config {{ firedancer_config_path }} keys new {{ identity_path }}"
      when: not identity_keypair_stat.stat.exists
  tags:
    - update_config

- name: Create the systemd service for fogo
  become: true
  template:
    src: "{{ firedancer_systemd_template_path }}"
    dest: "/etc/systemd/system/fogo-validator.service"
    mode: "0644"
  tags:
    - update_config

- name: Configure log rotation if Firedancer logs are written to a file
  become: true
  block:
    - name: Ensure logrotate is installed
      ansible.builtin.package:
        name: logrotate
        state: present

    - name: Install logrotate rule for Firedancer
      ansible.builtin.copy:
        dest: /etc/logrotate.d/firedancer
        owner: root
        group: root
        mode: "0644"
        content: |
          {{ firedancer_log_path }} {
            rotate {{ firedancer_log_rotation_days }}
            daily
            missingok
            copytruncate
          }
      notify: Run logrotate now
  when: "firedancer_log_path != '-'"
  tags:
    - update_config

- name: Enable and start fogo validator
  systemd_service:
    name: fogo-validator
    daemon_reload: true
    enabled: true
    state: started
  tags:
    - update_config

- name: Install Solana CLI
  include_tasks: install_solana_cli.yml
  when: install_solana_cli
  tags:
    - solana_cli
