- name: Remove temporary source code folder {{ temp_source_code_folder }}
  ansible.builtin.file:
    path: "{{ temp_source_code_folder }}"
    state: absent
  tags:
    - update_binary

- name: Recreate the temporary source code folder {{ temp_source_code_folder }}
  ansible.builtin.file:
    path: "{{ temp_source_code_folder }}"
    state: directory
  tags:
    - update_binary

- name: Download the release tar file
  get_url:
    url: "https://static.fogo.io/fogo-{{ validator_client_version }}.tar.gz"
    dest: /tmp
    checksum: "sha1:{{ validator_client_tarfile_checksum }}"
  tags:
    - update_binary

- name: Extract the files from the tar file
  ansible.builtin.unarchive:
    src: "/tmp/fogo-{{ validator_client_version }}.tar.gz"
    dest: "{{ temp_source_code_folder }}"
    creates: "{{ temp_source_code_folder }}/fogo/deps.sh"
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    remote_src: true
  tags:
    - update_binary

- name: Wait for a maintance window to build the binary
  shell: >
    bash -lc
    'agave-validator --ledger {{ ledger_path }}
    wait-for-restart-window --max-delinquent-stake {{ max_delinquent_stake_before_restart }} --min-idle-time {{ min_idle_time_in_minutes }}'
  become: true
  become_user: "{{ service_user }}"
  when: agave_validator_check.rc == 0
  register: wait_cmd
  changed_when: false
  failed_when: false
  tags:
    - update_binary

- name: Run deps.sh to install dependencies
  become: true
  become_user: "{{ service_user }}"
  shell: yes y | ./deps.sh
  args:
    chdir: "{{ temp_source_code_folder }}/fogo"
  retries: 2
  delay: 5
  tags:
    - update_binary

- name: Build fdctl binary
  become: true
  become_user: "{{ service_user }}"
  shell: . ~/.profile && make -j fdctl
  args:
    chdir: "{{ temp_source_code_folder }}/fogo"
    creates: "{{ temp_source_code_folder }}/fogo/build/native/gcc/bin/fdctl"
  register: make_result
  retries: 2
  until: make_result.rc == 0
  delay: 5
  tags:
    - update_binary

- name: Stat new fdctl (build artifact)
  ansible.builtin.stat:
    path: "{{ temp_source_code_folder }}/fogo/build/native/gcc/bin/fdctl"
    get_checksum: true
  register: new_fdctl
  tags:
    - update_binary

- name: Stat installed fdctl (target)
  ansible.builtin.stat:
    path: /usr/local/bin/fdctl
    get_checksum: true
  register: installed_fdctl
  tags:
    - update_binary

- name: Compute whether binary differs and/or perms need fixing
  ansible.builtin.set_fact:
    fdctl_needs_copy: >-
      {{ (not installed_fdctl.stat.exists) or
         (new_fdctl.stat.checksum != installed_fdctl.stat.checksum) }}
  tags:
    - update_binary

- name: Stop fogo validator as this is an upgrade task
  include_tasks: gracefully_stop_validator_service.yml
  when: fdctl_needs_copy
  tags:
    - never
    - update_binary

- name: Copy fdctl binary to /usr/local/bin
  become: true
  ansible.builtin.copy:
    src: "{{ temp_source_code_folder }}/fogo/build/native/gcc/bin/fdctl"
    dest: "/usr/local/bin/fdctl"
    remote_src: true
    mode: "0755"
  when: fdctl_needs_copy
  notify:
    - Restart fogo validator service
  tags:
    - update_binary
