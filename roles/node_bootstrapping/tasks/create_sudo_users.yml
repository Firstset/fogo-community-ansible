- name: Check if user {{ sudo_username }} exists
  become: true
  command: getent passwd "{{ sudo_username }}"
  register: user_exists
  check_mode: false
  ignore_errors: true

- name: Generate a random password (like a placeholder) that will be set expired in this execution
  set_fact:
    sudo_user_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=8, chars=['ascii_letters', 'digits']) }}"
  run_once: true

- name: Send the following one-time password to the user {{ sudo_username }}, which is needed for creating the real password
  ansible.builtin.debug:
    msg: "{{ sudo_user_password }}"
  run_once: true

- name: Create user {{ sudo_username }} with a random, expired password
  become: true
  user:
    name: "{{ sudo_username }}"
    shell: "/bin/bash"
    create_home: yes
    password: "{{ sudo_user_password | password_hash('sha512') }}" # Locked password
  when: user_exists.rc != 0 # return code is non-zero which means the user does not exist yet

- name: Expire password to force change on first login
  become: true
  command: "chage -d 0 {{ sudo_username }}"
  when: user_exists.rc != 0

- name: Add user {{ sudo_username }} to sudo group
  become: true
  user:
    name: "{{ sudo_username }}"
    groups: sudo
    append: yes

- name: Add SSH pub key to the user's `authorized_key` file
  become: true
  authorized_key:
    user: "{{ sudo_username }}"
    state: present
    key: "{{ sudo_user_pubkey }}"
  ignore_errors: true
